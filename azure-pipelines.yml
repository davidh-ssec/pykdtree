trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - v*
variables:
  CIBW_BUILDING: "true"
  CIBW_SKIP: "cp27-* cp34-* cp35-*"
  CIBW_TEST_REQUIRES: "pytest pytest-sugar"
  CIBW_TEST_COMMAND: "python -c \"import pykdtree.kdtree\""
  CIBW_BUILD_VERBOSITY: "2"
  CIBW_BEFORE_BUILD: "pip install -U numpy Cython pip setuptools"
jobs:
  - job: linux
    pool: {vmImage: 'Ubuntu-16.04'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          git submodule update --init --recursive
          python -m pip install --upgrade pip
          pip install cibuildwheel twine numpy Cython
          python setup.py sdist -d wheelhouse
          cibuildwheel --output-dir wheelhouse .
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(System.DefaultWorkingDirectory)/wheelhouse
          artifact: pykdtreeDeployLinux
  - job: macos
    pool: {vmImage: 'macOS-10.14'}
    steps:
      - task: UsePythonVersion@0
      - bash: |
          git submodule update --init --recursive
          python -m pip install --upgrade pip
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse .
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(System.DefaultWorkingDirectory)/wheelhouse
          artifact: pykdtreeDeployMacOS
  - job: windows
    pool: {vmImage: 'vs2017-win2016'}
    steps:
      - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x86}}
      - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
      - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x86}}
      - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
      - bash: |
          git submodule update --init --recursive
          python -m pip install --upgrade pip
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse .
      - task: PublishPipelineArtifact@1
        inputs:
          path: $(System.DefaultWorkingDirectory)/wheelhouse
          artifact: pykdtreeDeployWindows
  - job: deployPyPI
    pool: {vmImage: 'Ubuntu-16.04'}
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
    dependsOn:
      - linux
      - macos
      - windows
    steps:
      - task: UsePythonVersion@0
      - task: DownloadPipelineArtifact@2
        inputs:
          patterns: |
            pykdtreeDeployLinux/*
            pykdtreeDeployMacOS/*.whl
            pykdtreeDeployWindows/*.whl
      - bash: |
          cd $(Pipeline.Workspace)
          python -m pip install --upgrade pip
          pip install twine
          twine upload -u "__token__" --skip-existing pykdtreeDeployLinux/* pykdtreeDeployMacOS/* pykdtreeDeployWindows/*
        env:
          TWINE_PASSWORD: $(pypiToken)
